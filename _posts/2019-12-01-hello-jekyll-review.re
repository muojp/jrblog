= Jekyll+Re:VIEW+Netlifyでblogを作ってる

== 軽い気持ちで

JekyllもRe:VIEWもRubyで書かれてるから割と簡単にできるでしょ、と思っていた時期がありました。

しかし、書籍制作を前提として開発されている仕組みをインスタントなWeb出力に利用すると、何かと無理があります。
そもそもJekyllのConverter（ファイルからのテキスト変換を担うプラグインの仕組み）では、ファイルコンテンツのみが渡されてファイル名の情報すら一切失われます。

Re:VIEWが特定のディレクトリを書籍のソースディレクトリと捉え、当該ディレクトリ内のファイルリスト（チャプター一覧）を作成するところをワークフローの前提に置いているのとは対照的です。

== できていること

 * 基本的な構文の.re→.html変換
 ** たとえば、本エントリのソースは@<href>{https://github.com/muojp/jrblog/blob/master/_posts/2019-12-01-hello-jekyll-review.re, このファイル}

== これからやること

 * Re:VIEW側headlineのエントリ一覧への反映
 ** UTF-8時代なのでたぶんファイル名に日本語入れてゴリ押しは出来なくもないけど避けたい
 * 更新日時の埋め込み
 ** 独自のメタタグを用意する感じ
 * CSS適用
 ** 少なくともJekyll側のテーマに沿った感じにはしたい
 * インライン画像の埋め込み
 * 他チャプターの参照
 ** ファイル数が増えるとビルドがどんどん遅くなるので、これは実際やるか悩ましい

== 苦しみの図

本blogのソース一式は@<href>{https://github.com/muojp/jrblog/}にあります。

そのうち、JekyllでRe:VIEWを扱うための試行錯誤を反映した苦しみの図は@<href>{https://github.com/muojp/jrblog/blob/master/_plugins/review_re.rb}このあたりにあります。

@<code>{review-compile}コマンドの挙動を参考にしつつ、最低限のHTMLを出力できるようにちまちま書いている状態ですが、ひとまずもういくらか出来ることを増やしてjekyll-reviewのgemとしてリリースするところまでは行きたいと思います。

== Netlifyの使い勝手

Netlifyめちゃくちゃ便利という話はよく聞くものの、遠いインターネットの話かなぁと思ってほとんど使ってなかったんですが、使ってみると人気っぷりがよく理解できる完成度の高さでした。

簡単にメモがてら書き残しておきます。

 * @<href>{https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/, 公式のGitHub+NetlifyでJekyllやるガイド}が充実していて、まず迷わずにスタートできる
 * gemのキャッシュが十分に効くので、2度目以降のビルドが十数秒レベルで終わる
 ** 特にネイティブモジュールのビルドが必要なgem類はインストールに時間がかかるので、なるべくキャッシュしたいところです。Netlifyのデプロイ環境では少なくとも今のところJekyllとRe:VIEWの実行に必要な依存gemをほどよくキャッシュしてくれているようです。